@model ClientServerMVCDemo.ViewModels.ServerFunction.ServerFunctionManageAccessViewModel

@{
    ViewData["Title"] = "View";
}

<h1>Manage Access</h1>

<h4>Function</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="ManageFunctionAccess">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Function.Id" />
            <div class="form-group">
                <label class="control-label">@Model.Function.Name</label>
                <input type="hidden" asp-for="Function.Name" />
            </div>
            <div class="form-group">
                @if (Model.Function.Permissions != null)
                {
                    @for (int i = 0; i < Model.Function.Permissions.Count; i++)
                    {
                        <div class="form-group row">

                            <input type="hidden" asp-for="@Model.Function.Permissions[i].Id" />
                            <input type="hidden" asp-for="@Model.Function.Permissions[i].ClientId" />
                            <input type="hidden" asp-for="@Model.Function.Permissions[i].ServerFunctionId" />

                        </div>
                    }
                }
            </div>
            <div class="form-group">
                <hr />
                <label asp-for="SearchTerm" class="control-label"></label>
                <input asp-for="SearchTerm" class="form-control" />
            </div>
            <div class="form-group">
                @if(Model.SearchResults != null)
                {
                    @for (int i = 0; i < Model.SearchResults.Count; i++)
                    {
                        <hr/>
                        <input type="hidden" asp-for="@Model.SearchResults[i].Id" />
                        <input type="hidden" asp-for="@Model.SearchResults[i].Name" />
                        <label class="control-label">@Model.SearchResults[i].Name</label>
                        <div class"col-lg-9">
                            <label class="col-lg-3 col-form-label">Access: </label>
                            <input asp-for="@Model.ClientAccess[i]" />
                        </div>
                    }
                }
                @if(Model.SearchResults == null || Model.SearchResults.Count == 0)
                {
                    <p>No client matching search term. Only showing clients that do not have access.</p>
                }
            </div>
            <div class="form-group">
                <br />
                <input type="submit" value="Submit" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
